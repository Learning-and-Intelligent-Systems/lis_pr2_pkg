#!/usr/bin/env python
#Author: Ariel Anders
import rospy
from uber_controller import Uber
import dance_demos as dd

def test_gripper():
    rospy.loginfo("testing open gripper commands")
    uc.close_gripper('l')
    uc.close_gripper('r')
    rospy.loginfo("grippers should be closed")
    uc.open_gripper('l')
    uc.open_gripper('r')
    rospy.loginfo("grippers should be open")

def test_head():
    rospy.loginfo("testing head command")
    uc.look_down_center()
    raw_input("look up")
    uc.look_forward()

def test_torso():
    rospy.loginfo("testing torso command")
    uc.lift_torso()
    raw_input("move torso down")
    uc.down_torso()

def test_joint():
    rospy.loginfo("testing joint control")
    uc.move_arm_to_side("l")
    uc.move_arm_to_side("r")

def test_gripper_event(): 
    rospy.loginfo("requesting gripper event!-- right")
    print uc.wait_for_gripper_event('r')
    rospy.loginfo("requesting gripper event!-- left")
    uc.wait_for_gripper_event('l')

def test_get_state():
    print "testing gathering state information"
    raw_input("get joint angles-- left")
    print uc.get_joint_positions('l')


    raw_input("get joint angles-- right")
    print uc.get_joint_positions('r')

    raw_input("get cartesian pose-- left")
    print uc.return_cartesian_pose('l', 'base_link')

    raw_input("get cartesian pose--right")
    print uc.return_cartesian_pose('r', 'base_link')


       


rospy.init_node("ubertest")
rospy.loginfo("how to use uber controller")
uc = Uber()
'''
uc.command_joint_pose('l', [0]*7, 3, blocking=False)
uc.command_joint_pose('r', [0]*7, 3, blocking=False)
raw_input()

test_head() 
test_torso()
test_gripper()
test_joint()
'''
#test_gripper_event()

print (uc.get_head_pose())

'''
print dd.macerena_configs
for i in range(len(dd.macerena_times)):
    head_pos = dd.macerena_configs['step' + str(i+1)][2]
    uc.command_joint_pose('r', dd.macerena_configs['step' + str(i+1)][0], dd.macerena_times[i], blocking = True)
    uc.command_joint_pose('l', dd.macerena_configs['step' + str(i+1)][1], dd.macerena_times[i], blocking = True)
    uc.command_head( (head_pos[0],head_pos[1], 0),  "base_link", blocking=True, timeout=3)
'''  
for i in range(len(dd.dab_times)):
    uc.command_joint_pose('r', dd.dab_configs['step' + str(i+1)][0], dd.dab_times[i], blocking = False)
    uc.command_joint_pose('l', dd.dab_configs['step' + str(i+1)][1], dd.dab_times[i], blocking = False)
    uc.command_head( (dd.dab_configs['step' + str(i+1)][2],dd.dab_times[i], blocking=False)
    
